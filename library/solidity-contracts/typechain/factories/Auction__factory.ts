/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Auction, AuctionInterface } from "../Auction";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startPrice",
            type: "uint256",
          },
          {
            internalType: "enum Types.Category",
            name: "category",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct Types.Good",
        name: "good",
        type: "tuple",
      },
    ],
    name: "AuctionCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "auctionType",
    outputs: [
      {
        internalType: "enum Types.AuctionType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x6f550b83",
        type: "bytes32",
      },
    ],
    name: "c_0x6f550b83",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "canceledAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "createdAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "good",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startPrice",
        type: "uint256",
      },
      {
        internalType: "enum Types.Category",
        name: "category",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
          {
            internalType: "enum Types.AuctionType",
            name: "auctionType",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "description",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "startPrice",
                type: "uint256",
              },
              {
                internalType: "enum Types.Category",
                name: "category",
                type: "uint8",
              },
            ],
            internalType: "struct Types.Good",
            name: "good",
            type: "tuple",
          },
        ],
        internalType: "struct Types.NewAuction",
        name: "auction",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updatedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506119fa806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063994595e11161008c578063c24a0f8b11610066578063c24a0f8b146101cd578063cf09e0d0146101eb578063f2fde38b14610209578063f39a645f14610225576100cf565b8063994595e114610170578063aa8fb40b1461018e578063af640d0f146101af576100cf565b80630b97bc86146100d4578063715018a6146100f25780637519ab50146100fc5780638da5cb5b1461011a5780638e6a0688146101385780638faf60bc14610154575b600080fd5b6100dc610243565b6040516100e99190611576565b60405180910390f35b6100fa610249565b005b610104610386565b6040516101119190611576565b60405180910390f35b61012261038c565b60405161012f9190611450565b60405180910390f35b610152600480360381019061014d91906111ef565b6103b6565b005b61016e600480360381019061016991906111c6565b610882565b005b610178610885565b6040516101859190611486565b60405180910390f35b610196610898565b6040516101a694939291906114a1565b60405180910390f35b6101b76109d3565b6040516101c4919061146b565b60405180910390f35b6101d56109d9565b6040516101e29190611576565b60405180910390f35b6101f36109df565b6040516102009190611576565b60405180910390f35b610223600480360381019061021e919061119d565b6109e5565b005b61022d610b91565b60405161023a9190611576565b60405180910390f35b606b5481565b610251610b97565b73ffffffffffffffffffffffffffffffffffffffff1661026f61038c565b73ffffffffffffffffffffffffffffffffffffffff16146102c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bc90611534565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b606e5481565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900460ff16806103dc575060008054906101000a900460ff16155b61041b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041290611514565b60405180910390fd5b60008060019054906101000a900460ff16159050801561046b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6104977f180a3070bb3741ef62c5e7261ac71d44a4d819f15e30714066398b74ba0e2b1060001b610882565b6104c37f84da1feb7f0a48f30a375d4375508dae3f5242a739970e5a5f5053a910f5216060001b610882565b6104ef7f91ee269e1c50de3100fe8703f0e8d2d5341d4822ee969ae50aecfa695156b36260001b610882565b6104f7610b9f565b6105237fbb334ea84c21aeca129085511cb590ef7a0616fae2bb9e8ca269072d66ea417b60001b610882565b61054f7f54de70b42266d971a01409a2e819082734c076d59109ed197317112b7a19731a60001b610882565b816040516020016105609190611554565b604051602081830303815290604052805190602001206065819055506105a87fda5cd303a86c1ff192ae795c9207420892dcc8ae9142e5e1c438695fc668b2d660001b610882565b6105d47fac49b92fc00cc5694fa9ef02cca0a73f47acf9fcb1c8f7b24adf12d4727c58ce60001b610882565b8160600151606660008201518160000190805190602001906105f7929190610ef9565b506020820151816001019080519060200190610614929190610ef9565b506040820151816002015560608201518160030160006101000a81548160ff02191690836001811115610670577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055509050506106a47f88ca9a885082e0d26dfb00ea76bfeaa02c6384a583ba5c07f71504d029b353ee60001b610882565b6106d07f1046aa18109352ad878da0dcb32b2bd2107ea43a7c0c7801289fdb554ee9e19460001b610882565b8160400151606a60006101000a81548160ff0219169083600181111561071f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506107507f1b0d0590e114909052f45caea2cad4c413f67e9b26aef77986a151868e82afec60001b610882565b61077c7ff94bffba27dd87b1a4ccca80889e8b103bccfc377260531c14b404c2063355f860001b610882565b8160000151606b819055506107b37f16709fa7e7540c3c0be38c7eeacf8ae3737ce6c272b031fcfdde71491223b35360001b610882565b6107df7fadda51260d6f2cdbc45a995353e75810c688be0a8138bdc13cbe9d27d7e7479060001b610882565b8160200151606c819055506108167f122bad1d743753c435f2f11b5c8ff5543f59dac4d9cce812e13e8195ebc969be60001b610882565b6108427f7a8fe6d9908d702353e4d185f6774b67017f96ffa781c0683f6dae1a10c4296760001b610882565b6108576103e842610c8890919063ffffffff16565b606d81905550801561087e5760008060016101000a81548160ff0219169083151502179055505b5050565b50565b606a60009054906101000a900460ff1681565b60668060000180546108a990611740565b80601f01602080910402602001604051908101604052809291908181526020018280546108d590611740565b80156109225780601f106108f757610100808354040283529160200191610922565b820191906000526020600020905b81548152906001019060200180831161090557829003601f168201915b50505050509080600101805461093790611740565b80601f016020809104026020016040519081016040528092919081815260200182805461096390611740565b80156109b05780601f10610985576101008083540402835291602001916109b0565b820191906000526020600020905b81548152906001019060200180831161099357829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16905084565b60655481565b606c5481565b606d5481565b6109ed610b97565b73ffffffffffffffffffffffffffffffffffffffff16610a0b61038c565b73ffffffffffffffffffffffffffffffffffffffff1614610a61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5890611534565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ad1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac8906114f4565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606f5481565b600033905090565b600060019054906101000a900460ff1680610bc5575060008054906101000a900460ff16155b610c04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfb90611514565b60405180910390fd5b60008060019054906101000a900460ff161590508015610c54576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610c5c610c9e565b610c64610d77565b8015610c855760008060016101000a81548160ff0219169083151502179055505b50565b60008183610c969190611614565b905092915050565b600060019054906101000a900460ff1680610cc4575060008054906101000a900460ff16155b610d03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfa90611514565b60405180910390fd5b60008060019054906101000a900460ff161590508015610d53576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015610d745760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610d9d575060008054906101000a900460ff16155b610ddc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd390611514565b60405180910390fd5b60008060019054906101000a900460ff161590508015610e2c576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6000610e36610b97565b905080603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508015610ef65760008060016101000a81548160ff0219169083151502179055505b50565b828054610f0590611740565b90600052602060002090601f016020900481019282610f275760008555610f6e565b82601f10610f4057805160ff1916838001178555610f6e565b82800160010185558215610f6e579182015b82811115610f6d578251825591602001919060010190610f52565b5b509050610f7b9190610f7f565b5090565b5b80821115610f98576000816000905550600101610f80565b5090565b6000610faf610faa846115b6565b611591565b905082815260208101848484011115610fc757600080fd5b610fd28482856116fe565b509392505050565b600081359050610fe98161195f565b92915050565b600081359050610ffe81611976565b92915050565b6000813590506110138161198d565b92915050565b6000813590506110288161199d565b92915050565b600082601f83011261103f57600080fd5b813561104f848260208601610f9c565b91505092915050565b60006080828403121561106a57600080fd5b6110746080611591565b9050600082013567ffffffffffffffff81111561109057600080fd5b61109c8482850161102e565b600083015250602082013567ffffffffffffffff8111156110bc57600080fd5b6110c88482850161102e565b60208301525060406110dc84828501611188565b60408301525060606110f084828501611019565b60608301525092915050565b60006080828403121561110e57600080fd5b6111186080611591565b9050600061112884828501611188565b600083015250602061113c84828501611188565b602083015250604061115084828501611004565b604083015250606082013567ffffffffffffffff81111561117057600080fd5b61117c84828501611058565b60608301525092915050565b600081359050611197816119ad565b92915050565b6000602082840312156111af57600080fd5b60006111bd84828501610fda565b91505092915050565b6000602082840312156111d857600080fd5b60006111e684828501610fef565b91505092915050565b60006020828403121561120157600080fd5b600082013567ffffffffffffffff81111561121b57600080fd5b611227848285016110fc565b91505092915050565b6112398161166e565b82525050565b61124881611680565b82525050565b611257816116da565b82525050565b611266816116da565b82525050565b611275816116ec565b82525050565b611284816116ec565b82525050565b6000611295826115e7565b61129f81856115f2565b93506112af81856020860161170d565b6112b88161185f565b840191505092915050565b60006112ce826115e7565b6112d88185611603565b93506112e881856020860161170d565b6112f18161185f565b840191505092915050565b6000611309602683611603565b915061131482611870565b604082019050919050565b600061132c602e83611603565b9150611337826118bf565b604082019050919050565b600061134f602083611603565b915061135a8261190e565b602082019050919050565b60006080830160008301518482036000860152611382828261128a565b9150506020830151848203602086015261139c828261128a565b91505060408301516113b16040860182611432565b5060608301516113c4606086018261126c565b508091505092915050565b60006080830160008301516113e76000860182611432565b5060208301516113fa6020860182611432565b50604083015161140d604086018261124e565b50606083015184820360608601526114258282611365565b9150508091505092915050565b61143b816116d0565b82525050565b61144a816116d0565b82525050565b60006020820190506114656000830184611230565b92915050565b6000602082019050611480600083018461123f565b92915050565b600060208201905061149b600083018461125d565b92915050565b600060808201905081810360008301526114bb81876112c3565b905081810360208301526114cf81866112c3565b90506114de6040830185611441565b6114eb606083018461127b565b95945050505050565b6000602082019050818103600083015261150d816112fc565b9050919050565b6000602082019050818103600083015261152d8161131f565b9050919050565b6000602082019050818103600083015261154d81611342565b9050919050565b6000602082019050818103600083015261156e81846113cf565b905092915050565b600060208201905061158b6000830184611441565b92915050565b600061159b6115ac565b90506115a78282611772565b919050565b6000604051905090565b600067ffffffffffffffff8211156115d1576115d0611830565b5b6115da8261185f565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061161f826116d0565b915061162a836116d0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611663576116626117a3565b5b828202905092915050565b6000611679826116b0565b9050919050565b6000819050919050565b600081905061169882611937565b919050565b60008190506116ab8261194b565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116e58261168a565b9050919050565b60006116f78261169d565b9050919050565b82818337600083830152505050565b60005b8381101561172b578082015181840152602081019050611710565b8381111561173a576000848401525b50505050565b6000600282049050600182168061175857607f821691505b6020821081141561176c5761176b611801565b5b50919050565b61177b8261185f565b810181811067ffffffffffffffff8211171561179a57611799611830565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60028110611948576119476117d2565b5b50565b6002811061195c5761195b6117d2565b5b50565b6119688161166e565b811461197357600080fd5b50565b61197f81611680565b811461198a57600080fd5b50565b6002811061199a57600080fd5b50565b600281106119aa57600080fd5b50565b6119b6816116d0565b81146119c157600080fd5b5056fea2646970667358221220efed5a91e3b3dc960969cc42e307d7c06baa244af9566a1f7530e6ab836d9a6e64736f6c63430008040033";

export class Auction__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Auction> {
    return super.deploy(overrides || {}) as Promise<Auction>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Auction {
    return super.attach(address) as Auction;
  }
  connect(signer: Signer): Auction__factory {
    return super.connect(signer) as Auction__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuctionInterface {
    return new utils.Interface(_abi) as AuctionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Auction {
    return new Contract(address, _abi, signerOrProvider) as Auction;
  }
}
