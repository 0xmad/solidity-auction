/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x4baf4788",
        type: "bytes32",
      },
    ],
    name: "c_0x4baf4788",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620009f2380380620009f2833981810160405281019062000037919062000218565b6200006b7fc83ccfb8bec446bd0fb151fe56b50e3b378f39244535ca55375e49c0be9b2e5160001b620000f360201b60201c565b6200009f7fa90914403038590b94edc283f2e14bb0c4ca45633e441caae3300b53de3febf260001b620000f360201b60201c565b620000d37f618a2511d373166578f93ef4198b4d033b88bfed05a6b52388051c7aaeefb44660001b620000f360201b60201c565b8060009080519060200190620000eb929190620000f6565b5050620003cd565b50565b8280546200010490620002f2565b90600052602060002090601f01602090048101928262000128576000855562000174565b82601f106200014357805160ff191683800117855562000174565b8280016001018555821562000174579182015b828111156200017357825182559160200191906001019062000156565b5b50905062000183919062000187565b5090565b5b80821115620001a257600081600090555060010162000188565b5090565b6000620001bd620001b78462000286565b6200025d565b905082815260208101848484011115620001d657600080fd5b620001e3848285620002bc565b509392505050565b600082601f830112620001fd57600080fd5b81516200020f848260208601620001a6565b91505092915050565b6000602082840312156200022b57600080fd5b600082015167ffffffffffffffff8111156200024657600080fd5b6200025484828501620001eb565b91505092915050565b6000620002696200027c565b905062000277828262000328565b919050565b6000604051905090565b600067ffffffffffffffff821115620002a457620002a36200038d565b5b620002af82620003bc565b9050602081019050919050565b60005b83811015620002dc578082015181840152602081019050620002bf565b83811115620002ec576000848401525b50505050565b600060028204905060018216806200030b57607f821691505b602082108114156200032257620003216200035e565b5b50919050565b6200033382620003bc565b810181811067ffffffffffffffff821117156200035557620003546200038d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61061580620003dd6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635318138a14610046578063a413686214610062578063cfae32171461007e575b600080fd5b610060600480360381019061005b9190610373565b61009c565b005b61007c6004803603810190610077919061039c565b61009f565b005b61008661013d565b6040516100939190610416565b60405180910390f35b50565b6100cb7f4bd74506b6f603a2507ed65bc1da4ead91c3013d840154bb72ec2a294eb56fb760001b61009c565b6100f77f1821b1ba1321ede22f6eaccb01d6cbad37cd61cabeb8166b0fac52bb2f94be8c60001b61009c565b6101237f73cf6238a206e2fb51c3f4ee576a6744b7381c212cf92e57590ed11c90a5e43a60001b61009c565b8060009080519060200190610139929190610253565b5050565b606061016b7f99a48abfc0d5e948f33b8cfd3f8df39dccee50d8f17979bbb47640daebe3d71560001b61009c565b6101977f33232c22e0fe88fbe009d4c2fc57ae3c9199e210909ae2adb582bce2bab8f99a60001b61009c565b6101c37f0b29320e04561928dd97c0fd3aaa0e43a618c99ba349f2c96e64a754d272007760001b61009c565b600080546101d0906104f6565b80601f01602080910402602001604051908101604052809291908181526020018280546101fc906104f6565b80156102495780601f1061021e57610100808354040283529160200191610249565b820191906000526020600020905b81548152906001019060200180831161022c57829003601f168201915b5050505050905090565b82805461025f906104f6565b90600052602060002090601f01602090048101928261028157600085556102c8565b82601f1061029a57805160ff19168380011785556102c8565b828001600101855582156102c8579182015b828111156102c75782518255916020019190600101906102ac565b5b5090506102d591906102d9565b5090565b5b808211156102f25760008160009055506001016102da565b5090565b60006103096103048461045d565b610438565b90508281526020810184848401111561032157600080fd5b61032c8482856104b4565b509392505050565b600081359050610343816105c8565b92915050565b600082601f83011261035a57600080fd5b813561036a8482602086016102f6565b91505092915050565b60006020828403121561038557600080fd5b600061039384828501610334565b91505092915050565b6000602082840312156103ae57600080fd5b600082013567ffffffffffffffff8111156103c857600080fd5b6103d484828501610349565b91505092915050565b60006103e88261048e565b6103f28185610499565b93506104028185602086016104c3565b61040b816105b7565b840191505092915050565b6000602082019050818103600083015261043081846103dd565b905092915050565b6000610442610453565b905061044e8282610528565b919050565b6000604051905090565b600067ffffffffffffffff82111561047857610477610588565b5b610481826105b7565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b82818337600083830152505050565b60005b838110156104e15780820151818401526020810190506104c6565b838111156104f0576000848401525b50505050565b6000600282049050600182168061050e57607f821691505b6020821081141561052257610521610559565b5b50919050565b610531826105b7565b810181811067ffffffffffffffff821117156105505761054f610588565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6105d1816104aa565b81146105dc57600080fd5b5056fea26469706673582212208cc7dbd60e260804a96af7fbf00e6d285d0f4fd4c078e2c209db6b5ba4fcb9c364736f6c63430008040033";

export class Greeter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Greeter> {
    return super.deploy(greeting, overrides || {}) as Promise<Greeter>;
  }
  getDeployTransaction(
    greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(greeting, overrides || {});
  }
  attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
