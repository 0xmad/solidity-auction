/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xc3b2ff7f",
        type: "bytes32",
      },
    ],
    name: "c_0xc3b2ff7f",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620009f2380380620009f2833981810160405281019062000037919062000218565b6200006b7f93085ef7d0ab9b8aef160082c521c30635ad3874036ec894ea05855551fb4e6460001b620000f360201b60201c565b6200009f7f3cd90f00ec0b1ce97a7fe2d992e7cb7cb23358eb2320531a7dd09d3ca7f36c5f60001b620000f360201b60201c565b620000d37f06e2a9eb216afbf10667bdb85dcb5cd5372ebd553cf08e1a89f0becb0edbdb3560001b620000f360201b60201c565b8060009080519060200190620000eb929190620000f6565b5050620003cd565b50565b8280546200010490620002f2565b90600052602060002090601f01602090048101928262000128576000855562000174565b82601f106200014357805160ff191683800117855562000174565b8280016001018555821562000174579182015b828111156200017357825182559160200191906001019062000156565b5b50905062000183919062000187565b5090565b5b80821115620001a257600081600090555060010162000188565b5090565b6000620001bd620001b78462000286565b6200025d565b905082815260208101848484011115620001d657600080fd5b620001e3848285620002bc565b509392505050565b600082601f830112620001fd57600080fd5b81516200020f848260208601620001a6565b91505092915050565b6000602082840312156200022b57600080fd5b600082015167ffffffffffffffff8111156200024657600080fd5b6200025484828501620001eb565b91505092915050565b6000620002696200027c565b905062000277828262000328565b919050565b6000604051905090565b600067ffffffffffffffff821115620002a457620002a36200038d565b5b620002af82620003bc565b9050602081019050919050565b60005b83811015620002dc578082015181840152602081019050620002bf565b83811115620002ec576000848401525b50505050565b600060028204905060018216806200030b57607f821691505b602082108114156200032257620003216200035e565b5b50919050565b6200033382620003bc565b810181811067ffffffffffffffff821117156200035557620003546200038d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61061580620003dd6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063a413686214610046578063cfae321714610062578063e18aa15514610080575b600080fd5b610060600480360381019061005b919061039c565b61009c565b005b61006a61013a565b6040516100779190610416565b60405180910390f35b61009a60048036038101906100959190610373565b610250565b005b6100c87f3d987ca74ea306ca94eb3533997aaf4f61a2439bee509db66f1957ff2801239760001b610250565b6100f47ffd85a0acc47c5f71b89eb77b24ad149cef7f3f1c5568684c7df36d6e5f8da9fa60001b610250565b6101207f1a7dfe96964d1ea2145de64bdfb14d67c42430fb422baf41aafb852622b1ca4a60001b610250565b8060009080519060200190610136929190610253565b5050565b60606101687f3847949981ea34b11d72a815d976980da073b747131297755a67794b71dd329360001b610250565b6101947f76d1e8e2c30eac218428d609bcd583a402b3cd2990643c0eb143569b6bbed15d60001b610250565b6101c07ff2060c675f9790c5ef5b4511b79ae4ef3f4c8ef505891431b1cd17ca553b9c8760001b610250565b600080546101cd906104f6565b80601f01602080910402602001604051908101604052809291908181526020018280546101f9906104f6565b80156102465780601f1061021b57610100808354040283529160200191610246565b820191906000526020600020905b81548152906001019060200180831161022957829003601f168201915b5050505050905090565b50565b82805461025f906104f6565b90600052602060002090601f01602090048101928261028157600085556102c8565b82601f1061029a57805160ff19168380011785556102c8565b828001600101855582156102c8579182015b828111156102c75782518255916020019190600101906102ac565b5b5090506102d591906102d9565b5090565b5b808211156102f25760008160009055506001016102da565b5090565b60006103096103048461045d565b610438565b90508281526020810184848401111561032157600080fd5b61032c8482856104b4565b509392505050565b600081359050610343816105c8565b92915050565b600082601f83011261035a57600080fd5b813561036a8482602086016102f6565b91505092915050565b60006020828403121561038557600080fd5b600061039384828501610334565b91505092915050565b6000602082840312156103ae57600080fd5b600082013567ffffffffffffffff8111156103c857600080fd5b6103d484828501610349565b91505092915050565b60006103e88261048e565b6103f28185610499565b93506104028185602086016104c3565b61040b816105b7565b840191505092915050565b6000602082019050818103600083015261043081846103dd565b905092915050565b6000610442610453565b905061044e8282610528565b919050565b6000604051905090565b600067ffffffffffffffff82111561047857610477610588565b5b610481826105b7565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b82818337600083830152505050565b60005b838110156104e15780820151818401526020810190506104c6565b838111156104f0576000848401525b50505050565b6000600282049050600182168061050e57607f821691505b6020821081141561052257610521610559565b5b50919050565b610531826105b7565b810181811067ffffffffffffffff821117156105505761054f610588565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6105d1816104aa565b81146105dc57600080fd5b5056fea2646970667358221220b11d5226c6241ad77de15c4a11edc0152fcdff30c6748d8a998ced2a96a76ac364736f6c63430008040033";

export class Greeter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Greeter> {
    return super.deploy(greeting, overrides || {}) as Promise<Greeter>;
  }
  getDeployTransaction(
    greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(greeting, overrides || {});
  }
  attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
