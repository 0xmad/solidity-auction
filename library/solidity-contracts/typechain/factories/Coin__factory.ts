/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Coin, CoinInterface } from "../Coin";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Coin.TransferData",
        name: "data",
        type: "tuple",
      },
    ],
    name: "Send",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xeadce100",
        type: "bytes32",
      },
    ],
    name: "c_0xeadce100",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b6112ef806100db6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100ea5780638da5cb5b146100f4578063d0679d3414610112578063f2fde38b1461012e5761007d565b806327e235e31461008257806340c10f19146100b25780635f26997d146100ce575b600080fd5b61009c60048036038101906100979190610dc5565b61014a565b6040516100a99190611056565b60405180910390f35b6100cc60048036038101906100c79190610dee565b610162565b005b6100e860048036038101906100e39190610e2a565b610512565b005b6100f2610515565b005b6100fc61064f565b6040516101099190610f80565b60405180910390f35b61012c60048036038101906101279190610dee565b610678565b005b61014860048036038101906101439190610dc5565b610ba9565b005b60016020528060005260406000206000915090505481565b61016a610d52565b73ffffffffffffffffffffffffffffffffffffffff1661018861064f565b73ffffffffffffffffffffffffffffffffffffffff16146101de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d59061101b565b60405180910390fd5b61020a7fe2ff4f26ae52d8b97b029a5a176fdb5faf62eff46801f08604cc9af3fd138dda60001b610512565b6102367fe7176d4973405fe22dc905248f18a2eddd4bd85133f79a315d5cc3cb5b2259ae60001b610512565b6102627fe4a9de683c1f4e3546f5258358304c6769337b870caad26839178cc7d284fd6a60001b610512565b61028e7f1e88ab05e01ba34d7f117777f1b1bc5756681bf6cfd36119f40f4c762503bdf460001b610512565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156102fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f590610f9b565b60405180910390fd5b61032a7f8fc3363af00e48e7dffc16c390cdbb4f57012ebff1818a26a1db3e11fced2f2760001b610512565b6103567fc5790432404acf35876ac7801ef889ea37c680c6e2b9fdd61984dade9dfa1ff260001b610512565b6103827fb0e6fdc7e870d05621d7764971512d15470d959d0eb5dedf1644814c3631321360001b610512565b6103ae7f397b52897370d25e2c10270db6e2b7bfd3fe919454057869989a98fdf028f23960001b610512565b6402540be40081106103f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ec90610fdb565b60405180910390fd5b6104217f52dc054e58488e96c24edf53d76d021a073b4aafc8be076285997f20c46a9a3060001b610512565b61044d7fb0cac18c49bc6c54d92bcb0c27195d269bc0f499747c3885322a104de85f2d0e60001b610512565b6104797ff64841e1ea6f9c30f904a8660315b70abb8c206dd3c22c05ea690df148a41bad60001b610512565b6104cb81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d5a90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b50565b61051d610d52565b73ffffffffffffffffffffffffffffffffffffffff1661053b61064f565b73ffffffffffffffffffffffffffffffffffffffff1614610591576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105889061101b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106a47fd68a2653f430c178ffd22decff7e06591f0ea7ff1fd6a10825ed8e2972f66c8360001b610512565b6106d07f14e872fb3e5b3fa4b1d96bace1bacc8ced7b3489549cc21e3cc4f6cb618da7a060001b610512565b6106fc7f6f24979fa00fe433d0c22aadc3b26ac3c83b7aaf2a017598c32cce01908f201560001b610512565b6107287f0a799b124acef99325166ea1710508146c39ff282e80659d16c7d026575be75560001b610512565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610798576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078f90610f9b565b60405180910390fd5b6107c47f8359bb409cb1fac96bdf0bb1427b0cd290beb12b21eefb2a76993f04c8b3609560001b610512565b6107f07f20ba325818a64aa58d35dd644428d24c2419c2e8974bdbae27001e043ff87a7e60001b610512565b61081c7f8a3a2fe2a74523681d34f1de2fe8eb45afae179ef716cfa6c40db260bdb63b5660001b610512565b6108487f30f1695411ca364f5af2b5d459ecb1356de26dcf6d7647228742566c63650fff60001b610512565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156108ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c190610ffb565b60405180910390fd5b6108f67fec2389057fde28ecac248911f1ad979a18258b0f5ab5bf0271fab184292620fd60001b610512565b6109227ff215cacb4374cd6f064c42eb82673b3d5139387171e8905f3ca787e4e1a01c1960001b610512565b61094e7f67677b22533f562b6ad8c0fba5ec9cb4ab8b253a00c711adbde72939c4727d0b60001b610512565b6109a081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7090919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a0f7fa34766c42d418f71b2412390479a7fe968ae8548c462859d1a742c3b5e47a92d60001b610512565b610a3b7f06944e09dafb0afa9b06358365b02a1f6ee2f30b6163a7d4445949d739be1da460001b610512565b610a8d81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d5a90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610afc7f10112265b0ce032631bc846801f6ecd08c6170556eaef8fbc51f24d38601e7c860001b610512565b610b287f5386357e2298bfa2929ac893e1b5dc6dab12f551f31804fe8fc032cd545c9eef60001b610512565b7fd6c24bcb95d1f91ec9a1af9074fbd38b421dbb2ee2953fe13c87de3ddb27d5b360405180606001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815250604051610b9d919061103b565b60405180910390a15050565b610bb1610d52565b73ffffffffffffffffffffffffffffffffffffffff16610bcf61064f565b73ffffffffffffffffffffffffffffffffffffffff1614610c25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1c9061101b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8c90610fbb565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b60008183610d689190611082565b905092915050565b60008183610d7e91906110d8565b905092915050565b600081359050610d9581611274565b92915050565b600081359050610daa8161128b565b92915050565b600081359050610dbf816112a2565b92915050565b600060208284031215610dd757600080fd5b6000610de584828501610d86565b91505092915050565b60008060408385031215610e0157600080fd5b6000610e0f85828601610d86565b9250506020610e2085828601610db0565b9150509250929050565b600060208284031215610e3c57600080fd5b6000610e4a84828501610d9b565b91505092915050565b610e5c8161110c565b82525050565b610e6b8161110c565b82525050565b6000610e7e601b83611071565b9150610e8982611181565b602082019050919050565b6000610ea1602683611071565b9150610eac826111aa565b604082019050919050565b6000610ec4601383611071565b9150610ecf826111f9565b602082019050919050565b6000610ee7601083611071565b9150610ef282611222565b602082019050919050565b6000610f0a602083611071565b9150610f158261124b565b602082019050919050565b606082016000820151610f366000850182610e53565b506020820151610f496020850182610e53565b506040820151610f5c6040850182610f62565b50505050565b610f6b81611148565b82525050565b610f7a81611148565b82525050565b6000602082019050610f956000830184610e62565b92915050565b60006020820190508181036000830152610fb481610e71565b9050919050565b60006020820190508181036000830152610fd481610e94565b9050919050565b60006020820190508181036000830152610ff481610eb7565b9050919050565b6000602082019050818103600083015261101481610eda565b9050919050565b6000602082019050818103600083015261103481610efd565b9050919050565b60006060820190506110506000830184610f20565b92915050565b600060208201905061106b6000830184610f71565b92915050565b600082825260208201905092915050565b600061108d82611148565b915061109883611148565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110cd576110cc611152565b5b828201905092915050565b60006110e382611148565b91506110ee83611148565b92508282101561110157611100611152565b5b828203905092915050565b600061111782611128565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f5a65726f2061646472657373206973206e6f7420616c6c6f7765640000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f416d6f756e7420697320746f6f206c6172676500000000000000000000000000600082015250565b7f4e6f7420656e6f7567682066756e647300000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61127d8161110c565b811461128857600080fd5b50565b6112948161111e565b811461129f57600080fd5b50565b6112ab81611148565b81146112b657600080fd5b5056fea2646970667358221220c1080069ec64bb52c868e943253d521976c6fdf5d2c1e13ac5d430eb2d6393b664736f6c63430008040033";

export class Coin__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Coin> {
    return super.deploy(overrides || {}) as Promise<Coin>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Coin {
    return super.attach(address) as Coin;
  }
  connect(signer: Signer): Coin__factory {
    return super.connect(signer) as Coin__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoinInterface {
    return new utils.Interface(_abi) as CoinInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Coin {
    return new Contract(address, _abi, signerOrProvider) as Coin;
  }
}
